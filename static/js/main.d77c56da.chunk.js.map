{"version":3,"sources":["logo.svg","Components/Login/Login.js","Components/OxygenInfoCard/OxygenInfoCard.js","Components/Mobile/Mobile.js","Components/RoomDashboard/RoomDashboard.js","Components/General Dashboard/GeneralDashboard.js","App.js","serviceWorker.js","index.js","Components/images/oxylemon.png"],"names":["module","exports","Login","props","handleSubmit","event","preventDefault","handleInputChange","setState","target","name","value","state","username","password","token","credError","login_loading","auth_msg","login_now","bind","this","hashHistory","push","console","log","className","width","height","src","logo","alt","class","Form","onSubmit","Group","controlid","Label","InputGroup","Control","onChange","type","placeholder","Button","onClick","React","Component","OxygenInfoCard","retRGBcolor","roomData","oxygenlevel","room","nurse","doctor","time","date","styles","buildStyles","pathColor","percentageColor","style","fontSize","fsize","margin","GeneralDashboard","handleChange","csvfile","files","importCSV","Papa","parse","complete","updateData","header","undefined","csvfiledata","modalUploadShow","displayFloor","currFloor","title","options","ignore","e","tag","i","j","k","result","data","status","setModalUploadShow","show","now","Date","body","icon","lang","dir","sound","pFloor","displayingFloors","currFlooring","filter","csvdata","floor","indexOf","ordinal_suffix_of","timeout","swRegistration","sw","notSupported","handleNotSupported","onPermissionGranted","handlePermissionGranted","onPermissionDenied","handlePermissionDenied","onShow","handleNotificationOnShow","handleNotificationOnClick","onClose","handleNotificationOnClose","onError","handleNotificationOnError","Modal","onHide","linkShowModalUpload","Header","closeButton","Title","Body","inline","FormControl","Footer","variant","importModalClose","Navbar","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","Item","setDisplayFloor","Divider","Link","ringring","map","index","key","App","history","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d77c56da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\r\nimport {hashHistory  } from 'react-router';\r\nimport logo from '../images/oxylemon.png';\r\nimport './Login.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\n// import Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\n\r\nexport class Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username: '',\r\n            password: '',\r\n            token: null,\r\n            credError: false,\r\n            login_loading: false,\r\n            auth_msg: ''\r\n        }\r\n\r\n        this.login_now = this.login_now.bind(this);\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    handleInputChange = (event) =>{\r\n        event.preventDefault()\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    login_now(){\r\n        if(this.state.username === 'admin' && this.state.password === 'admin'){\r\n            hashHistory.push(\"/gendash\")\r\n        }\r\n        console.log('username: ',this.state.username);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"wrapper\">\r\n                <div className=\"container center-content\">\r\n                    <div className=\"login-box\">\r\n                        <div className=\"software-brand\">\r\n                            <img width=\"50\" height=\"50\" src={logo} alt=\"software brand missing\" />\r\n                            <b> Oxylemon</b>\r\n                        </div>\r\n\r\n                        <section class=\"message\">\r\n                            <span className=\"login-header\"><b>Welcome Back</b></span>\r\n                            <p>Please Sign In To Continue</p>\r\n                        </section>\r\n\r\n                        <section className=\"loginForm\">\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Form.Group controlid=\"formUsername\" >\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup  controlid=\"inptGrpUsername\">\r\n                                        <Form.Control className=\"input_box_size\" onChange={this.handleInputChange} name=\"username\" type=\"email\" placeholder=\"juandelacruz@wewinasone.com\" />\r\n                                    </InputGroup >\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group controlid=\"formBasicPassword\" >\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <InputGroup  controlid=\"inptGrpPassword\">\r\n                                        <Form.Control onChange={this.handleInputChange} name=\"password\" className=\"input_box_size\" type=\"password\" placeholder=\"••••••••••••••••••••••••••••••••••\" />\r\n                                    </InputGroup >\r\n                                </Form.Group>\r\n                                <Button className=\"login-btn\" onClick={this.login_now}>\r\n                                    <b>LOGIN</b>\r\n                                    {/* {this.state.login_loading ? \"LOADING\" : \"LOGIN\"} */}\r\n                                </Button>\r\n                            </Form>\r\n                        </section>\r\n                        \r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React,{useState} from 'react'\r\nimport logo from '../images/oxylemon.png';\r\nimport './OxygenInfoCard.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\n\r\nexport class OxygenInfoCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    percentageColor(){\r\n        let retRGBcolor = `rgba(25, 168, 255, 100)`\r\n        if(this.props.roomData.oxygenlevel >= 0 && this.props.roomData.oxygenlevel <= 30){\r\n            retRGBcolor = `rgb(252, 3, 3,100)`\r\n        }else if(this.props.roomData.oxygenlevel >= 31 && this.props.roomData.oxygenlevel <= 50){\r\n            retRGBcolor = `rgb(252, 206, 3,100)`\r\n        }else if(this.props.roomData.oxygenlevel >= 51 && this.props.roomData.oxygenlevel <= 100){\r\n            retRGBcolor = `rgba(25, 168, 255, 100)`\r\n        }\r\n        return retRGBcolor\r\n\r\n    }\r\n\r\n    render(){\r\n        // const [message, setMessage] = useState( '' );\r\n        return(\r\n            <>\r\n            <div className=\"card-design-info\">\r\n                <div className=\"info-container\">\r\n                    <h2>Room {this.props.roomData.room}</h2>\r\n                    <span>Name: {this.props.roomData.name}</span><br />\r\n                    <span>In Charge</span><br />\r\n                    <span>Nurse: {this.props.roomData.nurse}</span><br />\r\n                    <span>Doctor: {this.props.roomData.doctor}</span><br />\r\n                    <span>Last Changed</span><br />\r\n                    <span>Time: {this.props.roomData.time}</span><br />\r\n                    <span>Date: {this.props.roomData.date}</span>\r\n                </div>\r\n                <div className=\"gauge-container\">\r\n                    <CircularProgressbarWithChildren  \r\n                    styles={buildStyles({pathColor: this.percentageColor()})}\r\n                    value={this.props.roomData.oxygenlevel}>\r\n                        <div style={{ fontSize: 50 }}>\r\n                            <strong>{this.props.roomData.oxygenlevel}%</strong>\r\n                        </div>\r\n                        <div style={{ fontSize: this.props.fsize, margin: -5}}>\r\n                            <strong>Oxygen Level</strong>\r\n                        </div>\r\n                    </CircularProgressbarWithChildren>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import React from 'react'\r\nimport logo from '../images/oxylemon.png';\r\nimport './Mobile.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nexport class Mobile extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Container className=\"mobile-cards-container\">\r\n                    <Row>\r\n                        <Col xs={12} className=\"mobile-card-seperator\">\r\n                            <div className=\"mobile-card-design mobile-room-card-container \">\r\n                                <div className=\"mobile-wrapper-card\">\r\n                                    <div className=\"mobile-info-container\">\r\n                                        <h3>ROOM 201</h3>\r\n                                        <span>Name: Juan Dela Cruz</span><br />\r\n                                        <span>In Charge</span><br />\r\n                                        <span>Nurse: Joy Legayada</span><br />\r\n                                        <span>Doctor: Gamot Medina</span><br />\r\n                                        <span>Last Changed</span><br />\r\n                                        <span>Time: 18:00</span><br />\r\n                                        <span>Date: 01/01/2020</span>\r\n                                    </div>\r\n                                    <div className=\"mobile-gauge-container\">\r\n                                        <CircularProgressbarWithChildren  \r\n                                        styles={buildStyles({pathColor: `rgba(25, 168, 255, 100)`})}\r\n                                        value={93}>\r\n\r\n                                            <div style={{ fontSize: 35 }}>\r\n                                                <strong>93%</strong>\r\n                                            </div>\r\n                                            <div style={{ fontSize: 14, margin: -5}}>\r\n                                                <strong>Oxygen Level</strong>\r\n                                            </div>\r\n                                        </CircularProgressbarWithChildren>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            \r\n\r\n            \r\n        );\r\n    }\r\n}","import React,{useState} from 'react'\r\nimport logo from '../images/oxylemon.png';\r\nimport './RoomDashboard.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport {OxygenInfoCard} from '../OxygenInfoCard/OxygenInfoCard'\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nexport class RoomDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.handleClick = this.handleClick.bind(this);\r\n      }\r\n \r\n    render(){\r\n        // const [message, setMessage] = useState( '' );\r\n        return(\r\n            <div className =\"room_dashboard_wrapper\">\r\n                <div className=\"roomdashboard-header-controls\">\r\n                    <div className=\"brand-dash\">\r\n                        <img width=\"50\" height=\"50\" src={logo} alt=\"software brand missing\" />\r\n                        <b> Oxylemon</b>\r\n                    </div>\r\n\r\n                    <div className=\"header-form-group\">\r\n                        <i class=\"fa fa-search search-icon-header\">   </i>\r\n                        <input id=\"top-search\" name=\"top-search\" type=\"search\" placeholder=\"Search Room Number or Patient Name Here\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"roomdashboard-content\">\r\n                    <h1>First Floor Monitoring Dashboard</h1>\r\n                    <div className=\"container-fluid cards-container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-4 \">\r\n                                <OxygenInfoCard />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React,{useState} from 'react'\r\nimport logo from '../images/oxylemon.png';\r\nimport './GeneralDashboard.css'\r\nimport Papa from 'papaparse';\r\nimport Notification from 'react-web-notification'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport {OxygenInfoCard} from '../OxygenInfoCard/OxygenInfoCard'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport {sw} from './sw.js'\r\n\r\nimport {\r\n    BrowserView,\r\n    MobileView\r\n  } from \"react-device-detect\";\r\n\r\n\r\n\r\nexport class GeneralDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          csvfile: undefined,\r\n          csvfiledata: [],\r\n          modalUploadShow: false,\r\n          displayFloor: [],\r\n          currFloor: 'All Rooms Are Being Displayed',\r\n          title: '',\r\n          options:'',\r\n          ignore: true\r\n\r\n        };\r\n        this.updateData = this.updateData.bind(this);\r\n    }\r\n\r\n    handlePermissionGranted(){\r\n        console.log('Permission Granted');\r\n        this.setState({\r\n          ignore: false\r\n        });\r\n      }\r\n      \r\n      handlePermissionDenied(){\r\n        console.log('Permission Denied');\r\n        this.setState({\r\n          ignore: true\r\n        });\r\n      }\r\n\r\n      handleNotSupported(){\r\n        console.log('Web Notification not Supported');\r\n        this.setState({\r\n          ignore: true\r\n        });\r\n      }\r\n    \r\n      handleNotificationOnClick(e, tag){\r\n        console.log(e, 'Notification clicked tag:' + tag);\r\n      }\r\n    \r\n      handleNotificationOnError(e, tag){\r\n        console.log(e, 'Notification error tag:' + tag);\r\n      }\r\n    \r\n      handleNotificationOnClose(e, tag){\r\n        console.log(e, 'Notification closed tag:' + tag);\r\n      }\r\n    \r\n      handleNotificationOnShow(e, tag){\r\n        console.log(e, 'Notification shown tag:' + tag);\r\n      }\r\n    \r\n//NOTIFICATION FUNCTION END HERE\r\n\r\n    ordinal_suffix_of(i) {\r\n        var j = i % 10,\r\n            k = i % 100;\r\n        if (j == 1 && k != 11) {\r\n            return i + \"st\";\r\n        }\r\n        if (j == 2 && k != 12) {\r\n            return i + \"nd\";\r\n        }\r\n        if (j == 3 && k != 13) {\r\n            return i + \"rd\";\r\n        }\r\n        return i + \"th\";\r\n    }\r\n    \r\n    handleChange = event => {\r\n        this.setState({\r\n            csvfile: event.target.files[0]\r\n        });\r\n    };\r\n    \r\n    importCSV = () => {\r\n        const { csvfile } = this.state;\r\n        Papa.parse(csvfile, {\r\n            complete: this.updateData,\r\n            header: true\r\n        });\r\n    };\r\n    \r\n    updateData(result) {\r\n        var data = result.data;\r\n        this.setState({\r\n            csvfiledata: result.data,\r\n            displayFloor: result.data\r\n        });\r\n        console.log(data);\r\n    }\r\n\r\n    setModalUploadShow(status){\r\n        this.setState({\r\n            modalUploadShow: status\r\n        })\r\n    }\r\n\r\n    importModalClose(){\r\n        this.setModalUploadShow(false);\r\n        this.importCSV()\r\n    }\r\n\r\n    linkShowModalUpload(e,show){\r\n        this.setModalUploadShow(show);\r\n    }\r\n\r\n    ringring(e){\r\n        if(this.state.ignore) {\r\n            return;\r\n          }\r\n      \r\n          const now = Date.now();\r\n      \r\n          const title = 'React-Web-Notification' + now;\r\n          const body = 'Hello' + new Date();\r\n          const tag = now;\r\n          const icon = 'http://mobilusoss.github.io/react-web-notification/example/Notifications_button_24.png';\r\n          // const icon = 'http://localhost:3000/Notifications_button_24.png';\r\n      \r\n          // Available options\r\n          // See https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\r\n          const options = {\r\n            tag: tag,\r\n            body: body,\r\n            icon: icon,\r\n            lang: 'en',\r\n            dir: 'ltr',\r\n            sound: './sound.mp3'  // no browsers supported https://developer.mozilla.org/en/docs/Web/API/notification/sound#Browser_compatibility\r\n          }\r\n          this.setState({\r\n            title: title,\r\n            options: options\r\n          });\r\n    }\r\n\r\n    setDisplayFloor(e,pFloor){\r\n        // this.setState({\r\n        //     displayFloor: floor\r\n        // })\r\n        let displayingFloors = []\r\n        let currFlooring = ''\r\n        if(pFloor > 0){\r\n            displayingFloors = this.state.csvfiledata.filter(\r\n                (csvdata) => {\r\n                    return csvdata.floor.indexOf(pFloor) >= 1\r\n            })\r\n        }else{\r\n            displayingFloors = this.state.csvfiledata;\r\n        }\r\n\r\n        console.log(\"Displayin Data Floor \" + pFloor + \": \",displayingFloors)\r\n        if(pFloor !== 0){\r\n            currFlooring = 'You Now Are in ' + this.ordinal_suffix_of(pFloor) + ' floor'\r\n        }\r\n        else{\r\n            currFlooring = 'All Rooms Are Being Displayed'\r\n        }\r\n        this.setState({\r\n            displayFloor: displayingFloors,\r\n            currFloor : currFlooring \r\n        })\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <Notification timeout={5000}\r\n                    ignore={this.state.ignore && this.state.title !== ''} \r\n                    title={this.state.title} \r\n                    options={this.state.options}\r\n                    swRegistration = {sw} \r\n                    notSupported={this.handleNotSupported.bind(this)}\r\n                    onPermissionGranted={this.handlePermissionGranted.bind(this)}\r\n                    onPermissionDenied={this.handlePermissionDenied.bind(this)}\r\n                    onShow={this.handleNotificationOnShow.bind(this)}\r\n                    onClick={this.handleNotificationOnClick.bind(this)}\r\n                    onClose={this.handleNotificationOnClose.bind(this)}\r\n                    onError={this.handleNotificationOnError.bind(this)}\r\n                />\r\n                <Modal show={this.state.modalUploadShow} onHide={e => this.linkShowModalUpload(e,false)}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Upload Your Data Here</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form inline>\r\n                            <FormControl type=\"file\" placeholder=\"Choose File\" className=\"mr-sm-2\" onChange={this.handleChange} />\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={e => this.linkShowModalUpload(e,false)}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={e => this.importModalClose()}>\r\n                        Save Changes\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Navbar className=\"mobile-nav\" expand=\"sm\" fixed=\"top\">\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <img\r\n                            alt=\"\"\r\n                            src={logo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                        <strong>Oxylemon Aid</strong>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Select Floor \" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={e => this.setDisplayFloor(e,0)}>View All</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={e => this.setDisplayFloor(e,1)}>1st Floor</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={e => this.setDisplayFloor(e,2)}>2nd Floor</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={e => this.setDisplayFloor(e,3)}>3rd Floor</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                            </NavDropdown>\r\n                            <Nav.Link onClick={e => this.linkShowModalUpload(e,true)}>Upload File</Nav.Link>\r\n                            <Nav.Link onClick={e => this.ringring(e,true)}>Sample Notification</Nav.Link>\r\n\r\n                        </Nav>\r\n                        \r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2 gendash-search\" />\r\n                            <Button className=\"login-btn\"><strong>Search</strong></Button>\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <BrowserView>\r\n                    <div className=\"container-fluid content-dashboard\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <h1>{this.state.currFloor}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                {this.state.displayFloor.map((floor,index) => (<div key={index} className=\"col-sm-4 card-row-sep\"> \r\n                                    <OxygenInfoCard key={index} fsize={22} roomData={floor} /> \r\n                                    </div>) )\r\n                                }  \r\n                        </div>\r\n                    </div>\r\n                </BrowserView>\r\n                <MobileView>\r\n                    <div className=\"container-fluid content-dashboard\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <h1>{this.state.currFloor}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                {this.state.displayFloor.map((floor,index) => (<div key={index} className=\"col-sm-12 card-row-sep\"> \r\n                                    <OxygenInfoCard key={index} fsize={17} roomData={floor} /> \r\n                                    </div>) )\r\n                                }  \r\n                        </div>\r\n                    </div>\r\n                </MobileView>\r\n          </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport {Router,hashHistory} from 'react-router'\r\nimport {HashRouter, Route, Link, BrowserRouter } from 'react-router-dom'\r\n\r\nimport './App.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {Login} from './Components/Login/Login'\r\nimport {Mobile} from './Components/Mobile/Mobile'\r\nimport {RoomDashboard} from './Components/RoomDashboard/RoomDashboard'\r\nimport {GeneralDashboard} from './Components/General Dashboard/GeneralDashboard'\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n        username: '',\r\n        password: '',\r\n        token: null,\r\n        credError: false,\r\n        login_loading: false,\r\n        auth_msg: ''\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <HashRouter history={hashHistory} basename={process.env.PUBLIC_URL}>\r\n        <Route exact path = \"/\" component =  {Login} />\r\n        <Route path = \"/gendash\" component =  {GeneralDashboard} />\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/oxylemon.41bcc9dd.png\";"],"sourceRoot":""}